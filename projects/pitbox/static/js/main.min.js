'use strict';

var buttons = document.querySelectorAll('button');

if (buttons) {
  for (var i = 0; i < buttons.length; i++) {
    buttons[i].addEventListener('mouseup', function () {
      this.blur();
    });
  }
}

;
var promoSlider = new Swiper('.intro-slider', {
  loop: true,
  effect: "fade",
  navigation: {
    nextEl: '.intro-slider__btn-next',
    prevEl: '.intro-slider__btn-prev'
  },
  slidesPerView: 1,
  autoplay: {
    delay: 7000,
    speed: 500
  }
});

if (document.querySelector('.stages-work__slider')) {
  var _mediaQuery = window.matchMedia('(max-width: 768px)');

  var stagesWorkSlider;

  var _handleTabletChange = function _handleTabletChange(e) {
    if (e.matches) {
      stagesWorkSlider = new Swiper('.stages-work__slider', {
        loop: true,
        slidesPerView: 1,
        centeredSlides: true,
        pagination: {
          el: ".stages-work__pagination",
          clickable: true
        },
        spaceBetween: 30,
        autoplay: {
          delay: 3000,
          speed: 500
        }
      });
    } else {
      if (typeof stagesWorkSlider !== "undefined") {
        stagesWorkSlider.destroy();
      }
    }
  };

  _mediaQuery.addListener(_handleTabletChange);

  _handleTabletChange(_mediaQuery);
}

;
var testimonialsSlider = new Swiper('.testimonials__slider', {
  loop: true,
  pagination: {
    el: ".testimonials__pagination",
    clickable: true
  },
  slidesPerView: 1,
  effect: 'fade',
  fadeEffect: {
    crossFade: true
  },
  autoplay: {
    delay: 2500,
    speed: 500
  }
});
var gallerySlider = new Swiper('.gallery__slider', {
  loop: true,
  pagination: {
    el: ".gallery__pagination",
    clickable: true
  },
  slidesPerView: 4,
  breakpoints: {
    320: {
      slidesPerView: 2
    },
    576: {
      slidesPerView: 3
    },
    992: {
      slidesPerView: 4
    }
  }
});
;
"use strict";

function DynamicAdapt(type) {
  this.type = type;
}

DynamicAdapt.prototype.init = function () {
  var _this2 = this;

  var _this = this; // массив объектов


  this.оbjects = [];
  this.daClassname = "_dynamic_adapt_"; // массив DOM-элементов

  this.nodes = document.querySelectorAll("[data-da]"); // наполнение оbjects объктами

  for (var _i = 0; _i < this.nodes.length; _i++) {
    var node = this.nodes[_i];
    var data = node.dataset.da.trim();
    var dataArray = data.split(",");
    var оbject = {};
    оbject.element = node;
    оbject.parent = node.parentNode;
    оbject.destination = document.querySelector(dataArray[0].trim());
    оbject.breakpoint = dataArray[1] ? dataArray[1].trim() : "767";
    оbject.place = dataArray[2] ? dataArray[2].trim() : "last";
    оbject.index = this.indexInParent(оbject.parent, оbject.element);
    this.оbjects.push(оbject);
  }

  this.arraySort(this.оbjects); // массив уникальных медиа-запросов

  this.mediaQueries = Array.prototype.map.call(this.оbjects, function (item) {
    return '(' + this.type + "-width: " + item.breakpoint + "px)," + item.breakpoint;
  }, this);
  this.mediaQueries = Array.prototype.filter.call(this.mediaQueries, function (item, index, self) {
    return Array.prototype.indexOf.call(self, item) === index;
  }); // навешивание слушателя на медиа-запрос
  // и вызов обработчика при первом запуске

  var _loop = function _loop(_i2) {
    var media = _this2.mediaQueries[_i2];
    var mediaSplit = String.prototype.split.call(media, ',');
    var matchMedia = window.matchMedia(mediaSplit[0]);
    var mediaBreakpoint = mediaSplit[1]; // массив объектов с подходящим брейкпоинтом

    var оbjectsFilter = Array.prototype.filter.call(_this2.оbjects, function (item) {
      return item.breakpoint === mediaBreakpoint;
    });
    matchMedia.addListener(function () {
      _this.mediaHandler(matchMedia, оbjectsFilter);
    });

    _this2.mediaHandler(matchMedia, оbjectsFilter);
  };

  for (var _i2 = 0; _i2 < this.mediaQueries.length; _i2++) {
    _loop(_i2);
  }
};

DynamicAdapt.prototype.mediaHandler = function (matchMedia, оbjects) {
  if (matchMedia.matches) {
    for (var _i3 = 0; _i3 < оbjects.length; _i3++) {
      var оbject = оbjects[_i3];
      оbject.index = this.indexInParent(оbject.parent, оbject.element);
      this.moveTo(оbject.place, оbject.element, оbject.destination);
    }
  } else {
    for (var _i4 = 0; _i4 < оbjects.length; _i4++) {
      var _оbject = оbjects[_i4];

      if (_оbject.element.classList.contains(this.daClassname)) {
        this.moveBack(_оbject.parent, _оbject.element, _оbject.index);
      }
    }
  }
}; // Функция перемещения


DynamicAdapt.prototype.moveTo = function (place, element, destination) {
  element.classList.add(this.daClassname);

  if (place === 'last' || place >= destination.children.length) {
    destination.insertAdjacentElement('beforeend', element);
    return;
  }

  if (place === 'first') {
    destination.insertAdjacentElement('afterbegin', element);
    return;
  }

  destination.children[place].insertAdjacentElement('beforebegin', element);
}; // Функция возврата


DynamicAdapt.prototype.moveBack = function (parent, element, index) {
  element.classList.remove(this.daClassname);

  if (parent.children[index] !== undefined) {
    parent.children[index].insertAdjacentElement('beforebegin', element);
  } else {
    parent.insertAdjacentElement('beforeend', element);
  }
}; // Функция получения индекса внутри родителя


DynamicAdapt.prototype.indexInParent = function (parent, element) {
  var array = Array.prototype.slice.call(parent.children);
  return Array.prototype.indexOf.call(array, element);
}; // Функция сортировки массива по breakpoint и place
// по возрастанию для this.type = min
// по убыванию для this.type = max


DynamicAdapt.prototype.arraySort = function (arr) {
  if (this.type === "min") {
    Array.prototype.sort.call(arr, function (a, b) {
      if (a.breakpoint === b.breakpoint) {
        if (a.place === b.place) {
          return 0;
        }

        if (a.place === "first" || b.place === "last") {
          return -1;
        }

        if (a.place === "last" || b.place === "first") {
          return 1;
        }

        return a.place - b.place;
      }

      return a.breakpoint - b.breakpoint;
    });
  } else {
    Array.prototype.sort.call(arr, function (a, b) {
      if (a.breakpoint === b.breakpoint) {
        if (a.place === b.place) {
          return 0;
        }

        if (a.place === "first" || b.place === "last") {
          return 1;
        }

        if (a.place === "last" || b.place === "first") {
          return -1;
        }

        return b.place - a.place;
      }

      return b.breakpoint - a.breakpoint;
    });
    return;
  }
};

var da = new DynamicAdapt("max");
da.init();
;
var hamburger = document.querySelector('.header__nav-btn');
var nav = document.querySelector('.header__nav');
var btnClose = document.querySelector('.header__icon-close');
var body = document.querySelector('body');

var openMenu = function openMenu() {
  body.classList.add('fixed');
  nav.classList.add('header__nav--active');
};

var closeMenu = function closeMenu() {
  body.classList.remove('fixed');
  nav.classList.remove('header__nav--active');
};

hamburger.addEventListener('click', function () {
  openMenu();
});
btnClose.addEventListener('click', function () {
  closeMenu();
});
nav.addEventListener('click', function (evt) {
  if (evt.target === nav) {
    closeMenu();
  }
});

if (document.querySelector('.nav__box-icon')) {
  var arrowsMenu = document.querySelectorAll('.nav__box-icon');
  arrowsMenu.forEach(function (arrow, index) {
    arrow.addEventListener('click', function (evt) {
      evt.currentTarget.classList.toggle('nav__box-icon--active');
    });
  });
}

if (document.querySelector('.nav__link')) {
  var navs = document.querySelectorAll('.nav__link');
  navs.forEach(function (nav, index) {
    nav.addEventListener('click', function (evt) {
      evt.currentTarget.classList.toggle('nav__link--border');
    });
  });
}

if (document.querySelector('.nav__link')) {
  var navLinks = document.querySelectorAll('.nav__link');
  navLinks.forEach(function (nav, index) {
    nav.addEventListener('click', function (evt) {
      navLinks.forEach(function (nav) {
        nav.classList.remove('nav__link--border');
      });
      evt.currentTarget.classList.add('nav__link--border');
    });
  });
}

;

if (document.querySelector('.header__mob-icon')) {
  var btnMob = document.querySelector('.header__mob-icon');
  var headerInfo = document.querySelector('.header__info');
  btnMob.addEventListener('click', function (evt) {
    headerInfo.classList.toggle('header__info--active');
    evt.currentTarget.classList.toggle('header__mob-icon--active');
  });
}

; // if (window.matchMedia("(min-width: 993px)").matches) {
//   const header = document.querySelector('.header__wrap-bottom')
//   const scrollChange = 200;
//   let flagHeaderFixed = false;
//   const showHeader = () => {
//     header.classList.add("header__wrap-bottom--fixed");
//     header.classList.add("animate__fadeInDown");
//     flagHeaderFixed = true;
//     setTimeout(() => {
//       header.classList.remove("animate__fadeInDown");
//     }, 800);
//   };
//   const hideHeader = () => {
//     flagHeaderFixed = false;
//     header.classList.remove("header__wrap-bottom--fixed");
//   }
//   window.addEventListener('scroll', () => {
//     const scrollpos = window.scrollY;
//     if (scrollpos >= scrollChange && !flagHeaderFixed) {
//       showHeader();
//     } else if (scrollpos < 112 && flagHeaderFixed) {
//       hideHeader();
//     }
//   })
// }

;
var mediaQuery = window.matchMedia('(max-width: 992px)');

var handleTabletChange = function handleTabletChange(e) {
  if (e.matches) {
    var header = document.querySelector('.header__wrap-top');
    var scrollChange = 200;
    var flagHeaderFixed = false;

    var showHeader = function showHeader() {
      header.classList.add("header__wrap-top--fixed");
      header.classList.add("animate__fadeInDown");
      flagHeaderFixed = true;
      setTimeout(function () {
        header.classList.remove("animate__fadeInDown");
      }, 800);
    };

    var hideHeader = function hideHeader() {
      flagHeaderFixed = false;
      header.classList.remove("header__wrap-top--fixed");
    };

    window.addEventListener('scroll', function () {
      var scrollpos = window.scrollY;

      if (scrollpos >= scrollChange && !flagHeaderFixed) {
        showHeader();
      } else if (scrollpos < 112 && flagHeaderFixed) {
        hideHeader();
      }
    });
  } else {
    var _header = document.querySelector('.header__wrap-bottom');

    var _scrollChange = 200;
    var _flagHeaderFixed = false;

    var _showHeader = function _showHeader() {
      _header.classList.add("header__wrap-bottom--fixed");

      _header.classList.add("animate__fadeInDown");

      _flagHeaderFixed = true;
      setTimeout(function () {
        _header.classList.remove("animate__fadeInDown");
      }, 800);
    };

    var _hideHeader = function _hideHeader() {
      _flagHeaderFixed = false;

      _header.classList.remove("header__wrap-bottom--fixed");
    };

    window.addEventListener('scroll', function () {
      var scrollpos = window.scrollY;

      if (scrollpos >= _scrollChange && !_flagHeaderFixed) {
        _showHeader();
      } else if (scrollpos < 112 && _flagHeaderFixed) {
        _hideHeader();
      }
    });
  }
};

mediaQuery.addListener(handleTabletChange);
handleTabletChange(mediaQuery);

if (document.querySelector('.services__more-btn')) {
  var btnMore = document.querySelector('.services__more-btn');
  var blockMore = document.querySelector('.services__list-more');
  btnMore.addEventListener('click', function (evt) {
    evt.target.classList.add('services__more-btn--active');
    blockMore.classList.add('services__list-more--active');
  });
}

;

if (document.querySelector('.accordion-btn')) {
  var accordionBtns = document.querySelectorAll('.accordion-btn');
  accordionBtns.forEach(function (btn, index) {
    btn.addEventListener('click', function (evt) {
      evt.currentTarget.classList.toggle('accordion-btn--active');
    });
  });
}

;

if (document.querySelector('.nav-aside__link')) {
  var navAsideLinks = document.querySelectorAll('.nav-aside__link');
  navAsideLinks.forEach(function (nav, index) {
    nav.addEventListener('click', function (evt) {
      navAsideLinks.forEach(function (nav) {
        nav.classList.remove('nav-aside__link--active');
      });
      evt.currentTarget.classList.add('nav-aside__link--active');
    });
  });
}

;
var popupLinks = document.querySelectorAll('.popup__link');

var popupOpen = function popupOpen(currentPopup) {
  if (currentPopup) {
    var popupActive = document.querySelector('.popup--open');

    if (popupActive) {
      popupClose(popupActive);
    }
  }

  body.classList.add('fixed');
  currentPopup.classList.add('popup--open');
  currentPopup.addEventListener('click', function (e) {
    if (!e.target.closest('.popup__content')) {
      popupClose(e.target.closest('.popup'));
    }
  });
};

var popupClose = function popupClose(currentPopup) {
  currentPopup.classList.remove('popup--open');
  body.classList.remove('fixed');
};

var closeIcons = document.querySelectorAll('.popup__close');
closeIcons.forEach(function (close) {
  close.addEventListener('click', function () {
    popupClose(close.closest('.popup'));
  });
});
document.addEventListener('keydown', function (e) {
  if (e.which === 27) {
    var popupActive = document.querySelector('.popup--open');
    popupClose(popupActive);
  }
});

if (popupLinks.length > 0) {
  popupLinks.forEach(function (popupLink, index) {
    popupLink.addEventListener('click', function (e) {
      var currentPopup = document.getElementById('popup-order');
      popupOpen(currentPopup);
      e.preventDefault();
    });
  });
}

;

if (document.getElementById('date')) {
  var date = document.getElementById('date');

  date.onblur = function () {
    date.type = 'text';
  };

  date.onfocus = function () {
    date.type = 'date';
  };
}

if (document.getElementById('time')) {
  var _date = document.getElementById('time');

  _date.onblur = function (evt) {
    _date.type = 'text';
  };

  _date.onfocus = function (evt) {
    _date.type = 'time';
  };
}

;