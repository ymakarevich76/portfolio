'use strict';

var buttons = document.querySelectorAll('button');

if (buttons) {
  for (var i = 0; i < buttons.length; i++) {
    buttons[i].addEventListener('mouseup', function () {
      this.blur();
    });
  }
}

;
var swiper = new Swiper('.inst-slider', {
  loop: true,
  freeMode: true,
  autoplay: {
    delay: 2000
  },
  breakpoints: {
    320: {
      slidesPerView: 1.5
    },
    420: {
      slidesPerView: 2
    },
    768: {
      slidesPerView: 3.5
    },
    992: {
      slidesPerView: 3.5
    },
    1024: {
      slidesPerView: 4.5
    },
    1366: {
      slidesPerView: 5
    }
  }
});
;
var hamburger = document.querySelector('.header__icon-menu');
var nav = document.querySelector('.header__menu');
var btnClose = document.querySelector('.header__icon-close');
var body = document.querySelector('body');

var openMenu = function openMenu() {
  body.classList.add('fixed');
  nav.classList.add('header__menu--active');
  hamburger.classList.add('icon__menu--active');
};

var closeMenu = function closeMenu() {
  body.classList.remove('fixed');
  nav.classList.remove('header__menu--active');
  hamburger.classList.remove('icon__menu--active');
};

hamburger.addEventListener('click', function () {
  openMenu();
});
btnClose.addEventListener('click', function () {
  closeMenu();
});
nav.addEventListener('click', function (evt) {
  if (evt.target === nav) {
    closeMenu();
  }
});

if (document.querySelectorAll('.btn-chevron')) {
  var btnsChevron = document.querySelectorAll('.btn-chevron');
  btnsChevron.forEach(function (btn) {
    btn.addEventListener('click', function (evt) {
      evt.currentTarget.parentElement.classList.toggle('active');
    });
  });
}

;

if (document.querySelector('.tabs__btn')) {
  var tabs = document.querySelectorAll('.tabs__btn');
  var tabsContent = document.querySelectorAll('.tabs__content');
  tabs.forEach(function (tab, index) {
    tab.addEventListener('click', function (evt) {
      tabs.forEach(function (tab) {
        tab.classList.remove('tabs__btn--active');
      });
      evt.currentTarget.classList.add('tabs__btn--active');
      tabsContent.forEach(function (tabContent) {
        tabContent.classList.remove('tabs__content--active');
      });
      tabsContent[index].classList.add('tabs__content--active');
    });
  });
}

if (document.querySelector('.tabs-user__btn')) {
  var _tabs = document.querySelectorAll('.tabs-user__btn');

  var _tabsContent = document.querySelectorAll('.tabs-user__content');

  _tabs.forEach(function (tab, index) {
    tab.addEventListener('click', function (evt) {
      _tabs.forEach(function (tab) {
        tab.classList.remove('tabs-user__btn--active');
      });

      evt.currentTarget.classList.add('tabs-user__btn--active');

      _tabsContent.forEach(function (tabContent) {
        tabContent.classList.remove('tabs-user__content--active');
      });

      _tabsContent[index].classList.add('tabs-user__content--active');
    });
  });
}

if (document.querySelector('.filter__view-btn')) {
  var viewBtns = document.querySelectorAll('.filter__view-btn');
  var viewCatalogs = document.querySelectorAll('.catalog__wrap');
  viewBtns.forEach(function (viewBtn, index) {
    viewBtn.addEventListener('click', function (evt) {
      viewBtns.forEach(function (viewBtn) {
        viewBtn.classList.remove('filter__view-btn--active');
      });
      evt.currentTarget.classList.add('filter__view-btn--active');
      viewCatalogs.forEach(function (viewCatalog) {
        viewCatalog.classList.toggle('catalog__wrap--active');
      });
    });
  });
}

;

if (document.querySelector('.accordion__btn')) {
  var accordionBtns = document.querySelectorAll('.accordion__btn');
  accordionBtns.forEach(function (btn, index) {
    btn.addEventListener('click', function (evt) {
      evt.currentTarget.classList.toggle('accordion__btn--active');
    });
  });
}

if (document.querySelector('.accord__btn')) {
  var _accordionBtns = document.querySelectorAll('.accord__btn');

  var accordItem = document.querySelectorAll('.accord__item');

  _accordionBtns.forEach(function (btn, index) {
    btn.addEventListener('click', function (evt) {
      evt.currentTarget.classList.toggle('accord__btn--active');
      accordItem.forEach(function (item) {
        item.classList.remove('accord__item--active');
      });
      accordItem[index].classList.add('accord__item--active');
    });
  });
}

;
"use strict";

function DynamicAdapt(type) {
  this.type = type;
}

DynamicAdapt.prototype.init = function () {
  var _this2 = this;

  var _this = this; // массив объектов


  this.оbjects = [];
  this.daClassname = "_dynamic_adapt_"; // массив DOM-элементов

  this.nodes = document.querySelectorAll("[data-da]"); // наполнение оbjects объктами

  for (var _i = 0; _i < this.nodes.length; _i++) {
    var node = this.nodes[_i];
    var data = node.dataset.da.trim();
    var dataArray = data.split(",");
    var оbject = {};
    оbject.element = node;
    оbject.parent = node.parentNode;
    оbject.destination = document.querySelector(dataArray[0].trim());
    оbject.breakpoint = dataArray[1] ? dataArray[1].trim() : "767";
    оbject.place = dataArray[2] ? dataArray[2].trim() : "last";
    оbject.index = this.indexInParent(оbject.parent, оbject.element);
    this.оbjects.push(оbject);
  }

  this.arraySort(this.оbjects); // массив уникальных медиа-запросов

  this.mediaQueries = Array.prototype.map.call(this.оbjects, function (item) {
    return '(' + this.type + "-width: " + item.breakpoint + "px)," + item.breakpoint;
  }, this);
  this.mediaQueries = Array.prototype.filter.call(this.mediaQueries, function (item, index, self) {
    return Array.prototype.indexOf.call(self, item) === index;
  }); // навешивание слушателя на медиа-запрос
  // и вызов обработчика при первом запуске

  var _loop = function _loop(_i2) {
    var media = _this2.mediaQueries[_i2];
    var mediaSplit = String.prototype.split.call(media, ',');
    var matchMedia = window.matchMedia(mediaSplit[0]);
    var mediaBreakpoint = mediaSplit[1]; // массив объектов с подходящим брейкпоинтом

    var оbjectsFilter = Array.prototype.filter.call(_this2.оbjects, function (item) {
      return item.breakpoint === mediaBreakpoint;
    });
    matchMedia.addListener(function () {
      _this.mediaHandler(matchMedia, оbjectsFilter);
    });

    _this2.mediaHandler(matchMedia, оbjectsFilter);
  };

  for (var _i2 = 0; _i2 < this.mediaQueries.length; _i2++) {
    _loop(_i2);
  }
};

DynamicAdapt.prototype.mediaHandler = function (matchMedia, оbjects) {
  if (matchMedia.matches) {
    for (var _i3 = 0; _i3 < оbjects.length; _i3++) {
      var оbject = оbjects[_i3];
      оbject.index = this.indexInParent(оbject.parent, оbject.element);
      this.moveTo(оbject.place, оbject.element, оbject.destination);
    }
  } else {
    for (var _i4 = 0; _i4 < оbjects.length; _i4++) {
      var _оbject = оbjects[_i4];

      if (_оbject.element.classList.contains(this.daClassname)) {
        this.moveBack(_оbject.parent, _оbject.element, _оbject.index);
      }
    }
  }
}; // Функция перемещения


DynamicAdapt.prototype.moveTo = function (place, element, destination) {
  element.classList.add(this.daClassname);

  if (place === 'last' || place >= destination.children.length) {
    destination.insertAdjacentElement('beforeend', element);
    return;
  }

  if (place === 'first') {
    destination.insertAdjacentElement('afterbegin', element);
    return;
  }

  destination.children[place].insertAdjacentElement('beforebegin', element);
}; // Функция возврата


DynamicAdapt.prototype.moveBack = function (parent, element, index) {
  element.classList.remove(this.daClassname);

  if (parent.children[index] !== undefined) {
    parent.children[index].insertAdjacentElement('beforebegin', element);
  } else {
    parent.insertAdjacentElement('beforeend', element);
  }
}; // Функция получения индекса внутри родителя


DynamicAdapt.prototype.indexInParent = function (parent, element) {
  var array = Array.prototype.slice.call(parent.children);
  return Array.prototype.indexOf.call(array, element);
}; // Функция сортировки массива по breakpoint и place
// по возрастанию для this.type = min
// по убыванию для this.type = max


DynamicAdapt.prototype.arraySort = function (arr) {
  if (this.type === "min") {
    Array.prototype.sort.call(arr, function (a, b) {
      if (a.breakpoint === b.breakpoint) {
        if (a.place === b.place) {
          return 0;
        }

        if (a.place === "first" || b.place === "last") {
          return -1;
        }

        if (a.place === "last" || b.place === "first") {
          return 1;
        }

        return a.place - b.place;
      }

      return a.breakpoint - b.breakpoint;
    });
  } else {
    Array.prototype.sort.call(arr, function (a, b) {
      if (a.breakpoint === b.breakpoint) {
        if (a.place === b.place) {
          return 0;
        }

        if (a.place === "first" || b.place === "last") {
          return 1;
        }

        if (a.place === "last" || b.place === "first") {
          return -1;
        }

        return b.place - a.place;
      }

      return b.breakpoint - a.breakpoint;
    });
    return;
  }
};

var da = new DynamicAdapt("max");
da.init();
;

if (document.getElementById('slider-snap')) {
  var snapSlider = document.getElementById('slider-snap');
  noUiSlider.create(snapSlider, {
    range: {
      min: 50,
      max: 50000
    },
    start: [50, 50000],
    step: 50,
    connect: true
  });
  var snapValues = [document.getElementById('slider-snap-value-lower'), document.getElementById('slider-snap-value-upper')];
  snapSlider.noUiSlider.on('update', function (values, handle) {
    snapValues[handle].innerHTML = values[handle].split('.')[0] + ' руб.';
  });
}

;
$.mask.definitions['9'] = false;
$.mask.definitions['2'] = "[0-9]";
$("#phone-1").mask("+7 (495) 222-2222");
$("#phone-2").mask("+7(222) 222-2222");
$("#center_ok").click(function () {
  $(this).setCursorPosition(3);
}).mask("+7(999) 999-9999");
$("#center_not_ok").mask("+7(999) 999-9999");
;

if (document.querySelector('.product__available-value')) {
  var STEP = 1;
  var MAX_VALUE;
  var MIN_VALUE = 1;
  var num = document.querySelector('.product__available-value').innerHTML;
  MAX_VALUE = num;
  var btnPlus = document.querySelector('.plus');
  var btnMinus = document.querySelector('.minus');
  var field = document.querySelector('.add-cart__count-num');
  var fieldValue;

  var onBtnMinusPress = function onBtnMinusPress() {
    fieldValue = parseFloat(field.value);

    if (fieldValue > MIN_VALUE) {
      fieldValue -= STEP;
      field.setAttribute('value', fieldValue);
    }

    btnPlus.classList.remove('active');
    btnMinus.classList.add('active');
  };

  var onBtnPlusPress = function onBtnPlusPress() {
    fieldValue = parseFloat(field.value);

    if (fieldValue < MAX_VALUE) {
      fieldValue += STEP;
      field.setAttribute('value', fieldValue);
    }

    btnMinus.classList.remove('active');
    btnPlus.classList.add('active');
  };

  var toAddCartCount = function toAddCartCount() {
    field.setAttribute('value', MIN_VALUE);
    btnMinus.addEventListener('click', onBtnMinusPress);
    btnPlus.addEventListener('click', onBtnPlusPress);
  };

  toAddCartCount();
}

;

if (document.querySelectorAll('.card__heart-btn')) {
  var heartBtn = document.querySelectorAll('.card__heart-btn');
  heartBtn.forEach(function (btn) {
    btn.addEventListener('click', function (evt) {
      evt.preventDefault();
      evt.currentTarget.classList.toggle('card__heart-btn--active');
    });
  });
}

if (document.querySelector('.product__heart-btn')) {
  var _heartBtn = document.querySelector('.product__heart-btn');

  _heartBtn.addEventListener('click', function (evt) {
    evt.preventDefault();
    evt.currentTarget.classList.toggle('product__heart-btn--active');
  });
}

;

if (document.querySelectorAll('.good')) {
  var _MIN_VALUE = 1;
  var btnsPlus = document.querySelectorAll('.plus');
  var btnsMinus = document.querySelectorAll('.minus');
  btnsPlus.forEach(function (btn) {
    btn.addEventListener('click', function (evt) {
      var field = evt.target.closest('.good').querySelector('.add-cart__count-num');
      var num = evt.target.closest('.good').querySelector('.good__available-value').innerHTML;
      var fieldValue = parseFloat(field.value);

      if (fieldValue < num) {
        fieldValue++;
        field.setAttribute('value', fieldValue);
      }

      btn.classList.add('active');
      btnsMinus.forEach(function (btn) {
        btn.classList.remove('active');
      });
    });
  });
  btnsMinus.forEach(function (btn) {
    btn.addEventListener('click', function (evt) {
      var field = evt.target.closest('.good').querySelector('.add-cart__count-num');
      var fieldValue = parseFloat(field.value);

      if (fieldValue > _MIN_VALUE) {
        fieldValue--;
        field.setAttribute('value', fieldValue);
      }

      btnsPlus.forEach(function (btn) {
        btn.classList.remove('active');
      });
      btn.classList.add('active');

      if (fieldValue <= _MIN_VALUE) {
        btn.classList.remove('active');
      }
    });
  });
}

;